{"version":3,"sources":["images/jeu3.svg","components/Navbar.js","components/AboutMe.js","components/Projects.js","content/data.js","content/functionsDB.js","components/Home.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","call","window","open","react_default","a","createElement","className","onClick","this","props","onClickEng","onClickEsp","href","labelAboutMe","labelProjects","labelContact","Component","AboutMe","text","Projects","_this","title","map","index","key","technology","technologies","data","content","projectsSpanish","projectsEnglish","titlesSpanish","titlesEnglish","contentSpanish","contentEnglish","forEach","project","push","functionsDB","Home","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","contentToSpanish","setState","aboutMe","components_AboutMe","navAboutMe","navProjects","navContact","titleProjects","functions","contentToEnglish","state","technologyProjects","components_Navbar","src","name","alt","components_Projects","Boolean","location","hostname","match","ReactDOM","render","components_Home","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b46536ba.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/jeu3.c85d54ed.svg\";","import React, {Component} from 'react';\n\n\n\nclass Navbar extends Component {\n  call = () => {\n    window.open('tel:3312782450');\n  }\n\n  render () {\n    return (\n      <div className=\"navbar\">\n          <section className=\"navbar-language\">\n            <button onClick={this.props.onClickEng}>English</button>\n            <button onClick={this.props.onClickEsp}>Español</button>\n          </section>\n          <section className=\"navbar-menu\">\n            <a href=\"#home\">{this.props.labelAboutMe}</a>\n            <a href=\"#home\">{this.props.labelProjects}</a>\n            <a href=\"#home\">{this.props.labelContact}</a>\n          </section>\n          <section className=\"navbar-contact\">\n            <button className=\"Phone is-animating\" onClick={this.call}></button>\n          </section>\n      </div>\n    )\n  }\n};\n\nexport default Navbar;\n","import React, {Component} from 'react';\n\nclass AboutMe extends Component {\n\n  render () {\n    return (\n      <section className=\"about-me\">\n      <p>\n        {this.props.text}\n      </p>\n      </section>\n    )\n  }\n};\n\nexport default AboutMe;\n","import React, {Component} from 'react';\n\nclass Projects extends Component{\n\n  render () {\n    return (\n      <section className=\"projects\">\n        {\n          this.props.title.map((title, index) => (\n            <div className=\"project-container\" key={index}>\n              <header>{title}</header>\n              <article>\n                {\n                  this.props.technology[index].technologies.map((technology, index) => (\n                    <span key={index}>{technology}</span>\n                  ))\n                }\n              </article>\n            </div>\n          ))\n        }\n      </section>\n    )\n  }\n};\n\nexport default Projects;\n","const data = [\n  {\n    title: \"Sobre Mí\",\n    content: \"Hola, soy Jeu, desarrolladora front-end viviendo en Guadalajara, soy autodidacta y me encanta enfrentarme a nuevos retos. Si no sé algo, buscaré la manera rápida y efecitva para aprenderlo.\"\n  },\n  {\n    title: \"About Me\",\n    content: \"Hi, I'm Jeu, front-end developer living in Guadalajara, I am self-taught and I love facing new challenges. If I don't know something, I will look for the best and effective way to learn it.\"\n  },\n  {\n    projectsSpanish: [\n      {\n        title: \"Chatbot\",\n        content: \"Chatbot por medio de WhatsApp para solicitar frutas y verduras, sus precios e informes\",\n        technologies: [\"Javascript\", \"Dialogflow\", \"Twilio\", \"node.js\"]\n      },\n      {\n        title: \"frutas-verduras\",\n        content: \"API con conexión a base de datos de frutas y verduras, incluy autenticación con token.\",\n        technologies: [\"Javascript\", \"MongoDB\", \"mongoose\", \"Express\", \"node.js\", \"heroku\"]\n      },\n      {\n        title: \"MD-Links\",\n        content: \"Librería lee y analiza archivos en formato Markdown , para verificar los links que contengan y reporta algunas estadísticas como, total de links en el archivo, total de links únicos, y rotos.\",\n        technologies: [\"node.js\", \"Jest\", \"TDD\", \"Diagramas de Flujo\"]\n      },\n      {\n        title: \"Veganet \",\n        content: \"Aplicación web dirigida a personas que tienen gusto por la comida vegana/vegetariana, en la cual pueden publicar y buscar productos específicos de este estilo de vida.\",\n        technologies: [\"React\", \"Firebase\", \"react-router\", \"Figma\"]\n      },\n    ],\n    projectsEnglish: [\n      {\n        title: \"Chatbot\",\n        content: \"Chatbot por medio de WhatsApp para solicitar frutas y verduras, sus precios e informes\",\n        technologies: [\"Javascript\", \"Dialogflow\", \"Twilio\", \"node.js\"]\n      },\n      {\n        title: \"fruits-veggies\",\n        content: \"API con conexión a base de datos de frutas y verduras, incluy autenticación con token.\",\n        technologies: [\"Javascript\", \"MongoDB\", \"mongoose\", \"Express\", \"node.js\", \"heroku\"]\n      },\n      {\n        title: \"MD-Links\",\n        content: \"Librería lee y analiza archivos en formato Markdown , para verificar los links que contengan y reporta algunas estadísticas como, total de links en el archivo, total de links únicos, y rotos.\",\n        technologies: [\"node.js\", \"Jest\", \"TDD\", \"Diagramas de Flujo\"]\n      },\n      {\n        title: \"Veganet \",\n        content: \"Aplicación web dirigida a personas que tienen gusto por la comida vegana/vegetariana, en la cual pueden publicar y buscar productos específicos de este estilo de vida.\",\n        technologies: [\"React\", \"Firebase\", \"react-router\", \"Figma\"]\n      },\n    ]\n  }\n];\n\n\nexport default data;\n","import data from './data.js';\n\nconst projectsSpanish = data[2].projectsSpanish;\n\nconst projectsEnglish = data[2].projectsEnglish;\n\n\nconst titlesSpanish = [];\nconst titlesEnglish = [];\nconst contentSpanish = [];\nconst contentEnglish = [];\n\nprojectsSpanish.forEach(project => {\n  titlesSpanish.push(project.title);\n  contentSpanish.push(project.content);\n})\n\nprojectsEnglish.forEach(project => {\n  titlesEnglish.push(project.title);\n  contentEnglish.push(project.content);\n})\n\n\n\nexport default {\n  titlesSpanish,\n  titlesEnglish,\n  contentSpanish,\n  contentEnglish,\n  projectsSpanish,\n  projectsEnglish,\n}\n","import React, {Component} from 'react';\nimport Navbar from './Navbar';\nimport AboutMe from './AboutMe';\nimport Projects from './Projects';\nimport data from '../content/data.js';\nimport name from '../images/jeu3.svg';\nimport functions from '../content/functionsDB.js'\n\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      aboutMe: <AboutMe text={data[0].content}/>,\n      navAboutMe: \"Sobre mí\",\n      navProjects: \"Proyectos\",\n      navContact: \"Contacto\",\n      titleProjects: functions.titlesSpanish,\n      technologyProjects: functions.projectsSpanish,\n    };\n  }\n\n  contentToSpanish = () => {\n    this.setState({ aboutMe: <AboutMe text={data[0].content}/> });\n    this.setState({ navAboutMe: \"Sobre mí\"});\n    this.setState({ navProjects: \"Proyectos\"});\n    this.setState({ navContact: \"Contacto\"});\n    this.setState({ titleProjects: functions.titlesSpanish});\n  }\n\n  contentToEnglish = () => {\n    this.setState({ aboutMe: <AboutMe text={data[1].content}/> });\n    this.setState({ navAboutMe: \"About Me\"});\n    this.setState({ navProjects: \"Projects\"});\n    this.setState({ navContact: \"Contact\"});\n    this.setState({ titleProjects: functions.titlesEnglish});\n\n  }\n\n  render () {\n    return (\n      <div className=\"home\" >\n        <Navbar\n          onClickEng={this.contentToEnglish}\n          onClickEsp={this.contentToSpanish}\n          labelAboutMe={this.state.navAboutMe}\n          labelProjects={this.state.navProjects}\n          labelContact={this.state.navContact}\n        />\n        <main>\n          <img className=\"name-jeu\" src={name} alt=\"\" />\n          {this.state.aboutMe}\n          <Projects\n            title={this.state.titleProjects}\n            technology={this.state.technologyProjects}\n          />\n        </main>\n      </div>\n    )\n  }\n};\n\nexport default Home;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Home from './components/Home';\nimport './content/functionsDB.js';\nimport * as serviceWorker from './serviceWorker';\n\n//styles\nimport './styles/index.css';\nimport './styles/home.css';\nimport './styles/navbar.scss';\nimport './styles/aboutMe.css';\nimport './styles/projects.css';\n\n\nReactDOM.render(<Home />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}